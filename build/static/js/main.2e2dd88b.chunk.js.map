{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","getSortByClass","sortByOption","state","sortBy","handleSortByChange","setState","handleTermChange","e","term","target","value","handleLocationChange","location","handleSearch","searchYelp","preventDefault","renderSortByOptions","Object","keys","sortByOptions","sortByOptionValue","onClick","bind","placeholder","onChange","Yelp","search","fetch","headers","Authorization","process","then","response","json","jsonResponse","image_url","address1","categories","title","review_count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e2dd88b.chunk.js","sourcesContent":["import React from 'react'\nimport './Business.css'\n\n\n\nclass Business extends React.Component {\n  render(){\n    return (\n      <div className='Business'>\n        <div className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt={this.props.business.name}/>\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\" >\n          <p>{this.props.business.address}</p>\n          <p>{this.props.business.city}</p>\n          <p>{this.props.business.zipCode}</p>\n        </div>\n        <div className=\"Business-reviews\" >\n          <h3>{this.props.business.category}</h3>\n          <h3 className=\"rating\">{this.props.business.rating}</h3>\n          <p>{this.props.business.reviewCount}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\n\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n  render(){\n    return (\n      <div className=\"BusinessList\">\n        {\n          this.props.businesses.map(business => {\n            return <Business key={business.id} business={business}/>\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default BusinessList;","import React from 'react';\nimport './SearchBar.css'\n\nconst sortByOptions = {\n  'Best Match': 'best_match',\n  'Highest Rated': 'rating',\n  'Most Reviewed': 'review_count'\n}\n\nclass SearchBar extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    }\n  }\n\n  getSortByClass = (sortByOption) => {\n    if(this.state.sortBy === sortByOption){\n      return 'active';\n    } else {\n      return '';\n    }\n  }\n\n  handleSortByChange = (sortByOption) => {\n    this.setState({ sortBy: sortByOption })\n  }\n\n  handleTermChange = (e) => {\n    this.setState({ term: e.target.value })\n  }\n\n  handleLocationChange = (e) => {\n    this.setState({ location: e.target.value })\n  }\n\n  handleSearch = (e) => {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy)\n    e.preventDefault();\n  }\n\n  renderSortByOptions = () => {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption]\n      return (\n        <li \n          key={sortByOptionValue} \n          className={this.getSortByClass(sortByOptionValue)}\n          onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\n          >\n            {sortByOption}\n        </li>\n      )\n      \n    })\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Search Business\" onChange={this.handleTermChange}/>\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\n        </div>\n        <div className=\"SearchBar-submit\">\n          <a onClick={this.handleSearch}>Let's go</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar;","\n\nconst Yelp = {\n  search(term, location, sortBy){\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\n      }\n    })\n      .then(response => {\n        return response.json()\n      })\n      .then(jsonResponse => {\n        if(jsonResponse.businesses){\n          return jsonResponse.businesses.map(business => {\n            return {\n              id: business.id,\n              imageSrc: business.image_url,\n              name: business.name,\n              address: business.location.address1,\n              city: business.location.city,\n              state: business.location.state,\n              zipCode: business.location.zipCode,\n              category: business.categories[0].title,\n              rating: business.rating,\n              reviewCount: business.review_count\n            }\n          })\n        }\n      })\n  }\n}\n\nexport default Yelp;","import React from 'react'\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport Yelp from '../../util/Yelp';\n\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this)\n  }\n\n  searchYelp = (term, location, sortBy) => {\n    Yelp.search(term, location, sortBy)\n      .then(businesses => {\n        this.setState({businesses: businesses})\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp}/>\n        <BusinessList businesses={this.state.businesses}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}